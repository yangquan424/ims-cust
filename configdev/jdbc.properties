# 测试环境
## 数据库连接
#datasource.url=jdbc:oracle:thin:@192.168.1.96:1521:orclmes
## 用户名
#datasource.username=pangustest
## 密码
#datasource.password=test###2021

## 正式环境数据库连接
#datasource.url=jdbc:oracle:thin:@192.168.1.171:1521:mesdb
## 用户名
#datasource.username=pangus
## 密码
#datasource.password=pg2022

# 本地环境
# 数据库连接
#datasource.url=jdbc:oracle:thin:@localhost:1521:imsdb
## 用户名
#datasource.username=welm
## 密码
#datasource.password=123456


# 天地伟业测试环境数据库连接
# super_admin/5016201
datasource.url=jdbc:postgresql://10.10.9.113:1921/pangus
# 用户名
datasource.username=pangus
# 密码
datasource.password=PANGUS123!com


#本系统数据库连接池类型支持Druid和Hikari两种(同一个文件中只能启用其中一种连接池类型)，默认启用Druid；
# 启用数据库连接池类型Hikari
#datasource.type=com.zaxxer.hikari.HikariDataSource
# 连接池名称
datasource.hikari.pool-name=ImsHikariCP
# 最小空闲连接数
datasource.hikari.minimum-idle=5
# 最大连接数
datasource.hikari.maximum-pool-size=500
# 等待来自池的连接的最大毫秒数
datasource.hikari.connection-timeout=30000
# 连接在池中闲置的最长时间
datasource.hikari.idle-timeout=60000
# 池中连接的最大生存期
datasource.hikari.max-lifetime=600000
#设置连接校验的超时时间
datasource.hikari.validation-timeout=60000
#次属性控制从池返回的链接默认不自动提交
datasource.hikari.auto-commit=false
#制定hikari是否注册jmx mbeans
datasource.hikari.register-mbeans=true
#多少毫秒检测一次连接泄露
datasource.hikari.leak-detection-threshold=5000

# 启用数据库连接池类型Druid
datasource.type=com.alibaba.druid.pool.DruidDataSourceFactory
# 初始化时建立物理连接的个数
datasource.druid.initial-size=5
# 最小连接池数量
datasource.druid.min-idle=5
# 最大连接池数量
datasource.druid.max-active=500
# 获取连接时最大等待时间，单位毫秒
datasource.druid.max-wait=60000
# Destroy线程会检测连接的间隔时间
datasource.druid.time-between-eviction-runs-millis=60000
# 连接保持空闲而不被驱逐的最长时间
datasource.druid.min-evictable-idle-time-millis=1800000
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
datasource.druid.test-while-idle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
datasource.druid.test-on-borrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
datasource.druid.test-on-return=false
# 是否缓存preparedStatement，也就是PSCache
datasource.druid.pool-prepared-statements=true
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true
#datasource.druid.max-pool-prepared-statement-per-connection-size=20
datasource.druid.max-open-prepared-statements=1000
# 通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat、日志用的filter:log4j、防御sql注入的filter:wall
datasource.druid.filters=stat
